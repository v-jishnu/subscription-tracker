/**
 * Configuration.
 */
export type ReadBodyOpts = {
    /**
     * Length of the stream in bytes (optional);
     * an error is returned if the contents of the stream do not add up to this length;
     * useful when the exact size is known.
     */
    expectedLength?: number | null | undefined;
    /**
     * Limit of the body in bytes (required);
     * an error is returned if the body ends up being larger than this limit;
     * used to prevent reading too much data from malicious clients.
     */
    limit: number;
};
type EventHandlerLike = (event: string, listener: (...args: any[]) => void) => void;
/**
 * Stream.
 */
export interface ReadableStreamLike {
    on?: EventHandlerLike | null | undefined;
    readable?: boolean | null | undefined;
    removeListener?: EventHandlerLike | null | undefined;
}
/**
 * Read the body of a stream.
 *
 * @param stream
 *   Stream.
 * @param options
 *   Configuration (required).
 * @returns
 *   Promise to a concatenated body.
 */
export declare function readBody(stream: ReadableStreamLike, options: ReadBodyOpts): Promise<string>;
export {};
